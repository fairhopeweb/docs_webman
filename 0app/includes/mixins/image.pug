mixin image( url, caption, attr )
	- urlOriginal = url

	//- Allow image overrides:
	if config.images && config.images.hasOwnProperty( url )
		- url = config.images[ url ]

	if -1 < url.indexOf( 'dropbox' )
		- url = url.replace( 'www.dropbox.com', 'dl.dropboxusercontent.com' )
	else if 0 === url.indexOf( 'core/' )
		//- Global, core image from `0app/assets/images` folder.
		- url = url.replace( 'core/', '../0app/assets/images/' )
	else if -1 === url.indexOf( 'https:' )
		//- Local, theme specific image from `theme-slug/assets/images` folder.
		- url = 'assets/images/' + url

	- note = ''
	if config.imageNote && 0 !== url.indexOf( 'assets/images/' )
		- note = config.imageNote
	if config.imageNotes && config.imageNotes.hasOwnProperty( urlOriginal )
		- note = config.imageNotes[ urlOriginal ]

	figure&attributes( attributes )
		a( href=url title="Click to open large image" )
			img( src=url alt=caption )&attributes( attr )
			block
		if caption
			figcaption= caption
		if note
			//- Un-escaped for inline HTML.
			.note!= note

mixin map( url, caption )
	- url = url.replace( 'http:', 'https:' )
	- index.map++
	if -1 < url.indexOf( 'dropbox' )
		- url = url.replace( 'www.dropbox.com', 'dl.dropboxusercontent.com' )
	figure.image-map
		img( src=url alt=caption usemap="#image-map-"+index.map )
		map( name="image-map-"+index.map )
			block
		figcaption= caption
			br
			small
				a( href=url ) (Enlarge the image)
